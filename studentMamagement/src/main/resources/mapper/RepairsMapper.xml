<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.design.studentMamagement.mapper.RepairsMapper">

    <resultMap type="com.design.studentMamagement.pojo.Repairs" id="RepairsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="buildName" column="build_name" jdbcType="VARCHAR"/>
        <result property="repairsName" column="repairs_name" jdbcType="VARCHAR"/>
        <result property="reason" column="reason" jdbcType="VARCHAR"/>
        <result property="dormitoryNo" column="dormitory_no" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="checked" column="checked" jdbcType="INTEGER"/>
        <result property="userNo" column="user_no" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RepairsMap">
        select
          id, build_name, repairs_name, reason, dormitory_no, created_at, created_by, status, checked, user_no
        from repairs
        where id = #{id}
    </select>

    

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into repairs(build_name, repairs_name, reason, dormitory_no, created_at, created_by, status, checked, user_no)
        values (#{buildName}, #{repairsName}, #{reason}, #{dormitoryNo}, #{createdAt}, #{createdBy}, #{status}, #{checked}, #{userNo})
    </insert>

   
    <!--通过主键修改数据-->
    <update id="update">
        update repairs
        <set>
            <if test="buildName != null and buildName != ''">
                build_name = #{buildName},
            </if>
            <if test="repairsName != null and repairsName != ''">
                repairs_name = #{repairsName},
            </if>
            <if test="reason != null and reason != ''">
                reason = #{reason},
            </if>
            <if test="dormitoryNo != null and dormitoryNo != ''">
                dormitory_no = #{dormitoryNo},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="checked != null">
                checked = #{checked},
            </if>
            <if test="userNo != null and userNo != ''">
                user_no = #{userNo},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from repairs where id = #{id}
    </delete>
    <!--用select进行分页查询-->
    <select id="getPageListByCondition" resultMap="RepairsMap">
        select *  from repairs where created_at is not null
        <if test="page.key.buildName != null and page.key.buildName != ''">
            and  build_name =  #{page.key.buildName}
        </if>
        <if test="page.key.dormitoryNo != null and page.key.dormitoryNo != ''">
            and  dormitory_no = #{page.key.dormitoryNo}
        </if>
        <if test="page.key.status != null ">
            and  status = #{page.key.status}
        </if>
        <if test="page.key.checked != null ">
            and checked= #{page.key.checked}
        </if>
        <if test="page.key.userNo != null and page.key.userNo != ''">
            and  user_no like '%' #{page.key.userNo} '%'
        </if>
        <!--排序 desc是降序-->
        order by
        created_at desc
        <!--分页查询-->
        limit  #{page.startNum} , #{page.pageSize}
    </select>
    <!--分页查询条数-->
    <select id="getPageListCount" resultType="int">
        select count(id) as count from repairs where created_at is not null
        <if test="page.key.buildName != null and page.key.buildName != ''">
            and  build_name =  #{page.key.buildName}
        </if>
        <if test="page.key.dormitoryNo != null and page.key.dormitoryNo != ''">
            and  dormitory_no = #{page.key.dormitoryNo}
        </if>
        <if test="page.key.status != null ">
            and  status = #{page.key.status}
        </if>
        <if test="page.key.checked != null ">
            and  checked = #{page.key.checked}
        </if>
        <if test="page.key.userNo != null and page.key.userNo != ''">
            and  user_no like '%' #{page.key.userNo} '%'
        </if>
    </select>
</mapper>
